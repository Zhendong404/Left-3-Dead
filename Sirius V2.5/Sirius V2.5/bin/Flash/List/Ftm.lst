###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        12/Mar/2016  23:02:55
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\Sirius V2.5\src\Sources\C\Function_C\Ftm.c
#    Command line =  
#        "E:\Sirius V2.5\src\Sources\C\Function_C\Ftm.c" -D IAR -D TWR_K60N512
#        -lCN "E:\Sirius V2.5\bin\Flash\List\" -lB "E:\Sirius
#        V2.5\bin\Flash\List\" -o "E:\Sirius V2.5\bin\Flash\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I "E:\Sirius V2.5\src\Sources\H\"
#        -I "E:\Sirius V2.5\src\Sources\H\Component_H\" -I "E:\Sirius
#        V2.5\src\Sources\H\Frame_H\" -I "E:\Sirius
#        V2.5\src\Sources\H\Function_H\" -I "E:\Sirius
#        V2.5\src\Sources\H\SD_H\" -Ol --use_c++_inline
#    List file    =  E:\Sirius V2.5\bin\Flash\List\Ftm.lst
#    Object file  =  E:\Sirius V2.5\bin\Flash\Obj\Ftm.o
#
###############################################################################

E:\Sirius V2.5\src\Sources\C\Function_C\Ftm.c
      1          /******************************************************************************/
      2          /*******************************************************************************
      3            文件名：FTM模块C文件Ftm.c
      4            功  能：电机、舵机的PWM输出，编码器的输入捕捉。
      5            日  期：2014.11.04
      6            作  者：HJZ
      7            备  注：
      8          *******************************************************************************/
      9          /******************************************************************************/
     10          #include "Ftm.h"
     11          
     12          
     13          
     14          
     15          //------------------------------------------------------------------------------
     16          //函数名：MotorInit
     17          //功  能：电机驱动PWM初始化
     18          //参  数：无
     19          //返  回：无
     20          //说  明：
     21          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     22          void MotorInit(void)
     23          {
     24            //SIM_SOPT4|=SIM_SOPT4_FTM1FLT0_MASK;
     25            /* Turn on all port clocks */
     26            //SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
     27          
     28            /* Enable the function on PTA8 */
     29            // FTM is alt4 function for this pin
     30            PORTD_PCR4 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;  ///FTM0_CH4
   \                     MotorInit: (+1)
   \   00000000   0xF44F 0x6088      MOV      R0,#+1088
   \   00000004   0x....             LDR.N    R1,??DataTable2  ;; 0x4004c010
   \   00000006   0x6008             STR      R0,[R1, #+0]
     31            PORTD_PCR5 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;  ///FTM0_CH5
   \   00000008   0xF44F 0x6088      MOV      R0,#+1088
   \   0000000C   0x....             LDR.N    R1,??DataTable2_1  ;; 0x4004c014
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     32            PORTD_PCR6 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;  ///FTM0_CH6
   \   00000010   0xF44F 0x6088      MOV      R0,#+1088
   \   00000014   0x....             LDR.N    R1,??DataTable2_2  ;; 0x4004c018
   \   00000016   0x6008             STR      R0,[R1, #+0]
     33            PORTD_PCR7 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;  ///FTM0_CH7
   \   00000018   0xF44F 0x6088      MOV      R0,#+1088
   \   0000001C   0x....             LDR.N    R1,??DataTable2_3  ;; 0x4004c01c
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     34          
     35            SIM_SCGC6|=SIM_SCGC6_FTM0_MASK;   //使能FTM0时钟
   \   00000020   0x....             LDR.N    R0,??DataTable2_4  ;; 0x4004803c
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000028   0x....             LDR.N    R1,??DataTable2_4  ;; 0x4004803c
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     36          
     37            //change MSnB = 1
     38            FTM0_C4SC |= FTM_CnSC_ELSB_MASK;
   \   0000002C   0x....             LDR.N    R0,??DataTable2_5  ;; 0x4003802c
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000034   0x....             LDR.N    R1,??DataTable2_5  ;; 0x4003802c
   \   00000036   0x6008             STR      R0,[R1, #+0]
     39            FTM0_C4SC &= ~FTM_CnSC_ELSA_MASK;
   \   00000038   0x....             LDR.N    R0,??DataTable2_5  ;; 0x4003802c
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000040   0x....             LDR.N    R1,??DataTable2_5  ;; 0x4003802c
   \   00000042   0x6008             STR      R0,[R1, #+0]
     40            FTM0_C4SC |= FTM_CnSC_MSB_MASK;
   \   00000044   0x....             LDR.N    R0,??DataTable2_5  ;; 0x4003802c
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000004C   0x....             LDR.N    R1,??DataTable2_5  ;; 0x4003802c
   \   0000004E   0x6008             STR      R0,[R1, #+0]
     41          
     42            FTM0_C5SC |= FTM_CnSC_ELSB_MASK;
   \   00000050   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038034
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000058   0x....             LDR.N    R1,??DataTable2_6  ;; 0x40038034
   \   0000005A   0x6008             STR      R0,[R1, #+0]
     43            FTM0_C5SC &= ~FTM_CnSC_ELSA_MASK;
   \   0000005C   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038034
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000064   0x....             LDR.N    R1,??DataTable2_6  ;; 0x40038034
   \   00000066   0x6008             STR      R0,[R1, #+0]
     44            FTM0_C5SC |= FTM_CnSC_MSB_MASK;
   \   00000068   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038034
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000070   0x....             LDR.N    R1,??DataTable2_6  ;; 0x40038034
   \   00000072   0x6008             STR      R0,[R1, #+0]
     45          
     46            FTM0_C6SC |= FTM_CnSC_ELSB_MASK;
   \   00000074   0x....             LDR.N    R0,??DataTable2_7  ;; 0x4003803c
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000007C   0x....             LDR.N    R1,??DataTable2_7  ;; 0x4003803c
   \   0000007E   0x6008             STR      R0,[R1, #+0]
     47            FTM0_C6SC &= ~FTM_CnSC_ELSA_MASK;
   \   00000080   0x....             LDR.N    R0,??DataTable2_7  ;; 0x4003803c
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000088   0x....             LDR.N    R1,??DataTable2_7  ;; 0x4003803c
   \   0000008A   0x6008             STR      R0,[R1, #+0]
     48            FTM0_C6SC |= FTM_CnSC_MSB_MASK;
   \   0000008C   0x....             LDR.N    R0,??DataTable2_7  ;; 0x4003803c
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000094   0x....             LDR.N    R1,??DataTable2_7  ;; 0x4003803c
   \   00000096   0x6008             STR      R0,[R1, #+0]
     49          
     50            FTM0_C7SC |= FTM_CnSC_ELSB_MASK;
   \   00000098   0x....             LDR.N    R0,??DataTable2_8  ;; 0x40038044
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000A0   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40038044
   \   000000A2   0x6008             STR      R0,[R1, #+0]
     51            FTM0_C7SC &= ~FTM_CnSC_ELSA_MASK;
   \   000000A4   0x....             LDR.N    R0,??DataTable2_8  ;; 0x40038044
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0xF030 0x0004      BICS     R0,R0,#0x4
   \   000000AC   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40038044
   \   000000AE   0x6008             STR      R0,[R1, #+0]
     52            FTM0_C7SC |= FTM_CnSC_MSB_MASK;
   \   000000B0   0x....             LDR.N    R0,??DataTable2_8  ;; 0x40038044
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000000B8   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40038044
   \   000000BA   0x6008             STR      R0,[R1, #+0]
     53          
     54            //FTM1_SC = FTM_SC_PS(0) | FTM_SC_CLKS(1);
     55            //FTM1_SC = 0X0F;
     56            FTM0_SC = 0x08;//???not enable the interrupt mask
   \   000000BC   0x2008             MOVS     R0,#+8
   \   000000BE   0x....             LDR.N    R1,??DataTable2_9  ;; 0x40038000
   \   000000C0   0x6008             STR      R0,[R1, #+0]
     57            //系统时钟sys_clk，且为32分频，频率为2343.7Hz
     58            //FTM1_SC = 0X1F;     //BIT5
     59                                  //0 FTM counter operates in up counting mode.
     60                                  //1 FTM counter operates in up-down counting mode.
     61                                  //BIT43 FTM1_SC|=FTM1_SC_CLKS_MASK;
     62                                  //00 No clock selected (This in effect disables the FTM counter.)
     63                                  //01 System clock
     64                                  //10 Fixed frequency clock
     65                                  //11 External clock
     66                                  //BIT210 FTM1_SC|=FTM1_SC_PS_MASK;
     67                                  //100M          MOD=2000;     MOD=4000;   MOD=1000;
     68                                  //000 Divide by 1---12KHZ     6K          24k
     69                                  //001 Divide by 2--- 6KHZ
     70                                  //010 Divide by 4--- 3K
     71                                  //011 Divide by 8--- 1.5K
     72                                  //100 Divide by 16---750
     73                                  //101 Divide by 32---375
     74                                  //110 Divide by 64---187.5HZ
     75                                  //111 Divide by 128--93.75hz
     76          
     77            FTM0_MODE |= FTM_MODE_WPDIS_MASK;
   \   000000C2   0x....             LDR.N    R0,??DataTable2_10  ;; 0x40038054
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000CA   0x....             LDR.N    R1,??DataTable2_10  ;; 0x40038054
   \   000000CC   0x6008             STR      R0,[R1, #+0]
     78            //BIT1   Initialize the Channels Output
     79            //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
     80            FTM0_MODE &= ~1;
   \   000000CE   0x....             LDR.N    R0,??DataTable2_10  ;; 0x40038054
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0x0840             LSRS     R0,R0,#+1
   \   000000D4   0x0040             LSLS     R0,R0,#+1
   \   000000D6   0x....             LDR.N    R1,??DataTable2_10  ;; 0x40038054
   \   000000D8   0x6008             STR      R0,[R1, #+0]
     81            //BIT0   FTM Enable
     82            //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
     83            //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
     84          
     85            FTM0_OUTMASK=0X0F;   //0 Channel output is not masked. It continues to operate normally.
   \   000000DA   0x200F             MOVS     R0,#+15
   \   000000DC   0x....             LDR.N    R1,??DataTable2_11  ;; 0x40038060
   \   000000DE   0x6008             STR      R0,[R1, #+0]
     86                                 //1 Channel output is masked. It is forced to its inactive state.
     87          
     88            FTM0_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x....             LDR.N    R1,??DataTable2_12  ;; 0x40038064
   \   000000E4   0x6008             STR      R0,[R1, #+0]
     89            FTM0_OUTINIT=0;
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x....             LDR.N    R1,??DataTable2_13  ;; 0x4003805c
   \   000000EA   0x6008             STR      R0,[R1, #+0]
     90            FTM0_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x....             LDR.N    R1,??DataTable2_14  ;; 0x4003806c
   \   000000F0   0x6008             STR      R0,[R1, #+0]
     91            FTM0_POL=0;          //Channels Polarity (FTMx_POL)
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x....             LDR.N    R1,??DataTable2_15  ;; 0x40038070
   \   000000F6   0x6008             STR      R0,[R1, #+0]
     92                                 //0 The channel polarity is active high.
     93                                 //1 The channel polarity is active low.
     94            //Set Edge Aligned PWM
     95            FTM0_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
   \   000000F8   0x....             LDR.N    R0,??DataTable2_16  ;; 0x40038080
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0x0840             LSRS     R0,R0,#+1
   \   000000FE   0x0040             LSLS     R0,R0,#+1
   \   00000100   0x....             LDR.N    R1,??DataTable2_16  ;; 0x40038080
   \   00000102   0x6008             STR      R0,[R1, #+0]
     96            //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
     97            //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
     98            //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
     99          
    100            FTM0_INVCTRL=0;     //反转控制
   \   00000104   0x2000             MOVS     R0,#+0
   \   00000106   0x....             LDR.N    R1,??DataTable2_17  ;; 0x40038090
   \   00000108   0x6008             STR      R0,[R1, #+0]
    101            FTM0_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x....             LDR.N    R1,??DataTable2_18  ;; 0x40038094
   \   0000010E   0x6008             STR      R0,[R1, #+0]
    102            FTM0_PWMLOAD=0;     //FTM PWM Load
   \   00000110   0x2000             MOVS     R0,#+0
   \   00000112   0x....             LDR.N    R1,??DataTable2_19  ;; 0x40038098
   \   00000114   0x6008             STR      R0,[R1, #+0]
    103                                //BIT9:
    104                                //0 Loading updated values is disabled.
    105                                //1 Loading updated values is enabled.
    106            FTM0_CNTIN=0;       //Counter Initial Value
   \   00000116   0x2000             MOVS     R0,#+0
   \   00000118   0x....             LDR.N    R1,??DataTable2_20  ;; 0x4003804c
   \   0000011A   0x6008             STR      R0,[R1, #+0]
    107            FTM0_MOD=7500-1;      //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001)
   \   0000011C   0xF641 0x504B      MOVW     R0,#+7499
   \   00000120   0x....             LDR.N    R1,??DataTable2_21  ;; 0x40038008
   \   00000122   0x6008             STR      R0,[R1, #+0]
    108                                //采用龙丘时钟初始化函数，可以得到4分频的频率，系统60M频率时，PWM频率是15M,以此类推
    109                                //PMW频率=X系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
    110            FTM0_C4V=2500;         //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).
   \   00000124   0xF640 0x10C4      MOVW     R0,#+2500
   \   00000128   0x....             LDR.N    R1,??DataTable2_22  ;; 0x40038030
   \   0000012A   0x6008             STR      R0,[R1, #+0]
    111            FTM0_C5V=0;
   \   0000012C   0x2000             MOVS     R0,#+0
   \   0000012E   0x....             LDR.N    R1,??DataTable2_23  ;; 0x40038038
   \   00000130   0x6008             STR      R0,[R1, #+0]
    112            FTM0_C6V=2500;
   \   00000132   0xF640 0x10C4      MOVW     R0,#+2500
   \   00000136   0x....             LDR.N    R1,??DataTable2_24  ;; 0x40038040
   \   00000138   0x6008             STR      R0,[R1, #+0]
    113            FTM0_C7V=0;             ///此处CnV写0是为了使占空比为0，暂时不输出PWM波。   --HJZ
   \   0000013A   0x2000             MOVS     R0,#+0
   \   0000013C   0x....             LDR.N    R1,??DataTable2_25  ;; 0x40038048
   \   0000013E   0x6008             STR      R0,[R1, #+0]
    114            FTM0_CNT=0;         //只有低16位可用    
   \   00000140   0x2000             MOVS     R0,#+0
   \   00000142   0x....             LDR.N    R1,??DataTable2_26  ;; 0x40038004
   \   00000144   0x6008             STR      R0,[R1, #+0]
    115                               
    116          }
   \   00000146   0x4770             BX       LR               ;; return
    117          
    118          //------------------------------------------------------------------------------
    119          //函数名：QuadInit
    120          //功  能：正交编码器初始化
    121          //参  数：无
    122          //返  回：无
    123          //说  明：
    124          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    125          void QuadInit(void)
    126          {
    127            /*开启端口时钟*/
    128            //SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
    129            /*选择管脚复用功能*/
    130            PORTB_PCR0 = PORT_PCR_MUX(6);
   \                     QuadInit: (+1)
   \   00000000   0xF44F 0x60C0      MOV      R0,#+1536
   \   00000004   0x....             LDR.N    R1,??DataTable2_27  ;; 0x4004a000
   \   00000006   0x6008             STR      R0,[R1, #+0]
    131            PORTB_PCR1 = PORT_PCR_MUX(6);
   \   00000008   0xF44F 0x60C0      MOV      R0,#+1536
   \   0000000C   0x....             LDR.N    R1,??DataTable2_28  ;; 0x4004a004
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    132            PORTB_PCR18 = PORT_PCR_MUX(6);
   \   00000010   0xF44F 0x60C0      MOV      R0,#+1536
   \   00000014   0x....             LDR.N    R1,??DataTable2_29  ;; 0x4004a048
   \   00000016   0x6008             STR      R0,[R1, #+0]
    133            PORTB_PCR19 = PORT_PCR_MUX(6);
   \   00000018   0xF44F 0x60C0      MOV      R0,#+1536
   \   0000001C   0x....             LDR.N    R1,??DataTable2_30  ;; 0x4004a04c
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    134            /*使能FTM1、FTM2时钟*/
    135            SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;
   \   00000020   0x....             LDR.N    R0,??DataTable2_4  ;; 0x4004803c
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000028   0x....             LDR.N    R1,??DataTable2_4  ;; 0x4004803c
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    136            SIM_SCGC3|=SIM_SCGC3_FTM2_MASK;
   \   0000002C   0x....             LDR.N    R0,??DataTable2_31  ;; 0x40048030
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000034   0x....             LDR.N    R1,??DataTable2_31  ;; 0x40048030
   \   00000036   0x6008             STR      R0,[R1, #+0]
    137          
    138            FTM1_MOD = 20000;                 //可根据需要设置
   \   00000038   0xF644 0x6020      MOVW     R0,#+20000
   \   0000003C   0x....             LDR.N    R1,??DataTable2_32  ;; 0x40039008
   \   0000003E   0x6008             STR      R0,[R1, #+0]
    139            FTM2_MOD = 20000;
   \   00000040   0xF644 0x6020      MOVW     R0,#+20000
   \   00000044   0x....             LDR.N    R1,??DataTable2_33  ;; 0x400b8008
   \   00000046   0x6008             STR      R0,[R1, #+0]
    140          
    141            FTM1_CNTIN = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable2_34  ;; 0x4003904c
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    142            FTM2_CNTIN = 0;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x....             LDR.N    R1,??DataTable2_35  ;; 0x400b804c
   \   00000052   0x6008             STR      R0,[R1, #+0]
    143          
    144            FTM1_MODE |= FTM_MODE_WPDIS_MASK; //禁止写保护
   \   00000054   0x....             LDR.N    R0,??DataTable2_36  ;; 0x40039054
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000005C   0x....             LDR.N    R1,??DataTable2_36  ;; 0x40039054
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    145            FTM2_MODE |= FTM_MODE_WPDIS_MASK; //禁止写保护
   \   00000060   0x....             LDR.N    R0,??DataTable2_37  ;; 0x400b8054
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000068   0x....             LDR.N    R1,??DataTable2_37  ;; 0x400b8054
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    146            FTM1_MODE |= FTM_MODE_FTMEN_MASK; //FTMEN=1,关闭TPM兼容模式，开启FTM所有功能
   \   0000006C   0x....             LDR.N    R0,??DataTable2_36  ;; 0x40039054
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000074   0x....             LDR.N    R1,??DataTable2_36  ;; 0x40039054
   \   00000076   0x6008             STR      R0,[R1, #+0]
    147            FTM2_MODE |= FTM_MODE_FTMEN_MASK; //FTMEN=1,关闭TPM兼容模式，开启FTM所有功能
   \   00000078   0x....             LDR.N    R0,??DataTable2_37  ;; 0x400b8054
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000080   0x....             LDR.N    R1,??DataTable2_37  ;; 0x400b8054
   \   00000082   0x6008             STR      R0,[R1, #+0]
    148          
    149            FTM1_QDCTRL &= ~FTM_QDCTRL_QUADMODE_MASK;  //选定编码模式为A相与B相编码模式
   \   00000084   0x....             LDR.N    R0,??DataTable2_38  ;; 0x40039080
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0xF030 0x0008      BICS     R0,R0,#0x8
   \   0000008C   0x....             LDR.N    R1,??DataTable2_38  ;; 0x40039080
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    150            FTM1_QDCTRL |= FTM_QDCTRL_QUADEN_MASK;     //使能正交解码模式
   \   00000090   0x....             LDR.N    R0,??DataTable2_38  ;; 0x40039080
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000098   0x....             LDR.N    R1,??DataTable2_38  ;; 0x40039080
   \   0000009A   0x6008             STR      R0,[R1, #+0]
    151            FTM2_QDCTRL &= ~FTM_QDCTRL_QUADMODE_MASK;  //选定编码模式为A相与B相编码模式
   \   0000009C   0x....             LDR.N    R0,??DataTable2_39  ;; 0x400b8080
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF030 0x0008      BICS     R0,R0,#0x8
   \   000000A4   0x....             LDR.N    R1,??DataTable2_39  ;; 0x400b8080
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    152            FTM2_QDCTRL |= FTM_QDCTRL_QUADEN_MASK;     //使能正交解码模式
   \   000000A8   0x....             LDR.N    R0,??DataTable2_39  ;; 0x400b8080
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B0   0x....             LDR.N    R1,??DataTable2_39  ;; 0x400b8080
   \   000000B2   0x6008             STR      R0,[R1, #+0]
    153          
    154            FTM1_SC |= FTM_SC_CLKS(3);         //选择外部时钟
   \   000000B4   0x....             LDR.N    R0,??DataTable2_40  ;; 0x40039000
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0xF050 0x0018      ORRS     R0,R0,#0x18
   \   000000BC   0x....             LDR.N    R1,??DataTable2_40  ;; 0x40039000
   \   000000BE   0x6008             STR      R0,[R1, #+0]
    155            //FTM1_CONF |=FTM_CONF_BDMMODE(3); //可根据需要选择
    156            FTM2_SC |= FTM_SC_CLKS(3);
   \   000000C0   0x....             LDR.N    R0,??DataTable2_41  ;; 0x400b8000
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0xF050 0x0018      ORRS     R0,R0,#0x18
   \   000000C8   0x....             LDR.N    R1,??DataTable2_41  ;; 0x400b8000
   \   000000CA   0x6008             STR      R0,[R1, #+0]
    157            //FTM2_CONF |=FTM_CONF_BDMMODE(3);
    158          }
   \   000000CC   0x4770             BX       LR               ;; return
    159          
    160          
    161          
    162          /*
    163          
    164          //------------------------------------------------------------------------------
    165          //函数名：Ftm0Init
    166          //功  能：电机驱动PWM初始化
    167          //参  数：无
    168          //返  回：无
    169          //说  明：
    170          //------------------------------------------------------------------------------
    171          void Ftm0Init(void)
    172          {
    173            //打开PORTD模块门控时钟
    174            SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    175          
    176            //将PORTD4设置为FTM0_ch4，将PORTD5设置为FTM0_ch5，数字输出高驱动能力
    177            PORTD_PCR4 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; //D4为FTM0_ch4，电机左
    178            PORTD_PCR5 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; //D5为FTM0_ch5，电机右
    179          
    180            //使能FTM0时钟
    181            SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
    182          
    183            //配置FTM0_ch4为边沿对齐PWM，正极性
    184            FTM0_C4SC |= FTM_CnSC_ELSB_MASK;
    185            FTM0_C4SC &= ~FTM_CnSC_ELSA_MASK;
    186            FTM0_C4SC |= FTM_CnSC_MSB_MASK;
    187          
    188            //配置FTM0_ch5为边沿对齐PWM，正极性
    189            FTM0_C5SC |= FTM_CnSC_ELSB_MASK;
    190            FTM0_C5SC &= ~FTM_CnSC_ELSA_MASK;
    191            FTM0_C5SC |= FTM_CnSC_MSB_MASK;
    192          
    193            //时钟源选择sys_clk，对FTM计数器预分频16倍
    194            FTM0_SC = FTM_SC_PS(4) | FTM_SC_CLKS(1);
    195          
    196            FTM0_MODE &= ~FTM_MODE_FTMEN_MASK;         //禁止FTM模块
    197            //一旦禁止FTMEN，则FTM特定寄存器不能写入，即下述语句无效
    198            FTM0_OUTMASK = 0xCF;                       //通道4、5禁止掩码，继续正常运行
    199          
    200            FTM0_COMBINE = 0;                          //用于已连接通道,全部禁止
    201            FTM0_OUTINIT = 0;                          //外部输出初始化为0
    202            FTM0_EXTTRIG = 0;                          //外部触发设置，全部禁止
    203            FTM0_POL = 0;                              //输出极性设置，全部为正极性
    204          
    205            FTM0_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;     //正交解码器不使能，EPWM或者CPWM的条件
    206          
    207            FTM0_INVCTRL = 0;       //FTM倒置功能禁止
    208            FTM0_SWOCTRL = 0;       //软件输出控制禁止
    209            FTM0_PWMLOAD = 0;       //PWM加载控制禁止
    210          
    211            //下面设置PWM波的周期、占空比等参数
    212            //PWM计算方法：CnV/MOD，MOD已知，通过调整CnV控制占空比
    213            FTM0_CNTIN = 0;         //FTM计数初始值设置为0
    214            FTM0_MOD = 1000;        //FTM计数器模数值为1000
    215                                    //采用LQ的时钟初始化函数，得到二分频的PWM，如sys_clk为100M，则PWM为50M
    216                                    //PWM频率f=sys_clk/2/(2^FTM0_SC_PS)/FTM0_MOD=150M/2/16/1000=4687.5Hz，周期0.213ms
    217            FTM0_C4V = 0;           //脉宽设置为CnV - CNTIN，占空比为20%
    218            FTM0_C5V = 0;
    219            FTM0_CNT = 0;           //FTM计数器寄存器，低16位可以用，写入任何值将使其回到CNTIN
    220          }
    221          */
    222          //------------------------------------------------------------------------------
    223          //函数名：ServoInit
    224          //功  能：舵机驱动PWM初始化
    225          //参  数：无
    226          //返  回：无
    227          //说  明：
    228          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    229          void ServoInit(void)
    230          {
    231            //打开PORTA模块门控时钟
    232            SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
   \                     ServoInit: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable2_42  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x7000      ORRS     R0,R0,#0x200
   \   00000008   0x....             LDR.N    R1,??DataTable2_42  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    233          
    234            //将PORTB0设置为FTM1_ch0，数字输出高驱动能力
    235            PORTA_PCR12 = PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK;
   \   0000000C   0xF44F 0x7050      MOV      R0,#+832
   \   00000010   0x....             LDR.N    R1,??DataTable2_43  ;; 0x40049030
   \   00000012   0x6008             STR      R0,[R1, #+0]
    236          
    237            //使能FTM1模块门控时钟
    238            SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;
   \   00000014   0x....             LDR.N    R0,??DataTable2_4  ;; 0x4004803c
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000001C   0x....             LDR.N    R1,??DataTable2_4  ;; 0x4004803c
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    239          
    240            //配置FTM1_ch0为边沿对齐PWM，正极性
    241            FTM1_C0SC |= FTM_CnSC_ELSB_MASK;
   \   00000020   0x....             LDR.N    R0,??DataTable2_44  ;; 0x4003900c
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000028   0x....             LDR.N    R1,??DataTable2_44  ;; 0x4003900c
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    242            FTM1_C0SC &= ~FTM_CnSC_ELSA_MASK;
   \   0000002C   0x....             LDR.N    R0,??DataTable2_44  ;; 0x4003900c
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000034   0x....             LDR.N    R1,??DataTable2_44  ;; 0x4003900c
   \   00000036   0x6008             STR      R0,[R1, #+0]
    243            FTM1_C0SC |= FTM_CnSC_MSB_MASK;
   \   00000038   0x....             LDR.N    R0,??DataTable2_44  ;; 0x4003900c
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000040   0x....             LDR.N    R1,??DataTable2_44  ;; 0x4003900c
   \   00000042   0x6008             STR      R0,[R1, #+0]
    244          
    245            //时钟源选择sys_clk，对FTM计数器预分频128倍
    246            FTM1_SC = FTM_SC_PS(6) | FTM_SC_CLKS(1);
   \   00000044   0x200E             MOVS     R0,#+14
   \   00000046   0x....             LDR.N    R1,??DataTable2_40  ;; 0x40039000
   \   00000048   0x6008             STR      R0,[R1, #+0]
    247          
    248            FTM1_MODE &= ~FTM_MODE_FTMEN_MASK;         //禁止FTM模块
   \   0000004A   0x....             LDR.N    R0,??DataTable2_36  ;; 0x40039054
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x0840             LSRS     R0,R0,#+1
   \   00000050   0x0040             LSLS     R0,R0,#+1
   \   00000052   0x....             LDR.N    R1,??DataTable2_36  ;; 0x40039054
   \   00000054   0x6008             STR      R0,[R1, #+0]
    249            FTM1_OUTMASK &= ~1;                        //通道0禁止掩码，继续正常运行
   \   00000056   0x....             LDR.N    R0,??DataTable2_45  ;; 0x40039060
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x0840             LSRS     R0,R0,#+1
   \   0000005C   0x0040             LSLS     R0,R0,#+1
   \   0000005E   0x....             LDR.N    R1,??DataTable2_45  ;; 0x40039060
   \   00000060   0x6008             STR      R0,[R1, #+0]
    250          
    251            FTM1_COMBINE = 0;                          //用于已连接通道,全部禁止
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x....             LDR.N    R1,??DataTable2_46  ;; 0x40039064
   \   00000066   0x6008             STR      R0,[R1, #+0]
    252            FTM1_OUTINIT = 0;                          //外部输出初始化为0
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x....             LDR.N    R1,??DataTable2_47  ;; 0x4003905c
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    253            FTM1_EXTTRIG = 0;                          //外部触发设置，全部禁止
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x....             LDR.N    R1,??DataTable2_48  ;; 0x4003906c
   \   00000072   0x6008             STR      R0,[R1, #+0]
    254            FTM1_POL = 0;                              //输出极性设置，全部为正极性
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x....             LDR.N    R1,??DataTable2_49  ;; 0x40039070
   \   00000078   0x6008             STR      R0,[R1, #+0]
    255          
    256            FTM1_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;     //正交解码器不使能，EPWM或者CPWM的条件
   \   0000007A   0x....             LDR.N    R0,??DataTable2_38  ;; 0x40039080
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x0840             LSRS     R0,R0,#+1
   \   00000080   0x0040             LSLS     R0,R0,#+1
   \   00000082   0x....             LDR.N    R1,??DataTable2_38  ;; 0x40039080
   \   00000084   0x6008             STR      R0,[R1, #+0]
    257          
    258            FTM1_INVCTRL = 0;     //FTM倒置功能禁止
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x....             LDR.N    R1,??DataTable2_50  ;; 0x40039090
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    259            FTM1_SWOCTRL = 0;     //软件输出控制禁止
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x....             LDR.N    R1,??DataTable2_51  ;; 0x40039094
   \   00000090   0x6008             STR      R0,[R1, #+0]
    260            FTM1_PWMLOAD = 0;     //PWM加载控制禁止
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x....             LDR.N    R1,??DataTable2_52  ;; 0x40039098
   \   00000096   0x6008             STR      R0,[R1, #+0]
    261          
    262            //下面设置PWM波的周期、占空比等参数
    263            //PWM计算方法：CnV/MOD，MOD已知，通过调整CnV控制占空比
    264            FTM1_CNTIN = 0;         //FTM计数初始值设置为0
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x....             LDR.N    R1,??DataTable2_34  ;; 0x4003904c
   \   0000009C   0x6008             STR      R0,[R1, #+0]
    265            FTM1_MOD = 23437 - 1;        //FTM计数器模数值为2000
   \   0000009E   0xF645 0x308C      MOVW     R0,#+23436
   \   000000A2   0x....             LDR.N    R1,??DataTable2_32  ;; 0x40039008
   \   000000A4   0x6008             STR      R0,[R1, #+0]
    266                                    //采用LQ的时钟初始化函数，得到二分频的PWM，如sys_clk为100M，则PWM为50M
    267                                    //PWM频率f=sys_clk/2/(2^FTM1_SC_PS)/FTM1_MOD=150M/2/128/1953=300.02Hz，周期3.33ms
    268            FTM1_C0V = 1851;      //脉宽设置为CnV - CNTIN，占空比为20%
   \   000000A6   0xF240 0x703B      MOVW     R0,#+1851
   \   000000AA   0x....             LDR.N    R1,??DataTable2_53  ;; 0x40039010
   \   000000AC   0x6008             STR      R0,[R1, #+0]
    269            //4.3% 4.4%(L) 4.5% 5.0% 5.5% 6.0% 6.5% 7.0% 7.15%(C) 7.5% 8.0% 8.5% 9.0% 9.5% 9.9%(R) 10.0% 10.3% 10.5%
    270            //1008 1031    1055 1172 1289 1406 1523 1640 1676     1758 1875 1992 2109 2226 2320    2344  2414  4922
    271            
    272            //6.3% 1476为下限，左转。
    273            //6.6% 1547
    274            //6.8% 1594
    275            //6.9% 1617
    276            //7.9% 1851为中心，直走。
    277            //8.7% 2039
    278            //8.9% 2086
    279            //9.3% 2180为上限，右转。
    280            //
    281            FTM1_CNT = 0;           //FTM计数器寄存器，低16位可以用，写入任何值将使其回到CNTIN
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x....             LDR.N    R1,??DataTable2_54  ;; 0x40039004
   \   000000B2   0x6008             STR      R0,[R1, #+0]
    282          }
   \   000000B4   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x4004C010         DC32     0x4004c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x4004C014         DC32     0x4004c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x4004C018         DC32     0x4004c018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x4004C01C         DC32     0x4004c01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x4003802C         DC32     0x4003802c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x40038034         DC32     0x40038034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x4003803C         DC32     0x4003803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x40038044         DC32     0x40038044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x40038054         DC32     0x40038054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x40038060         DC32     0x40038060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x40038064         DC32     0x40038064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x4003805C         DC32     0x4003805c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x4003806C         DC32     0x4003806c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x40038070         DC32     0x40038070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x40038080         DC32     0x40038080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x40038090         DC32     0x40038090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x40038094         DC32     0x40038094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x40038098         DC32     0x40038098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x4003804C         DC32     0x4003804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x40038008         DC32     0x40038008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x40038030         DC32     0x40038030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x40038038         DC32     0x40038038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x40038040         DC32     0x40038040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x40038048         DC32     0x40038048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_26:
   \   00000000   0x40038004         DC32     0x40038004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_27:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_28:
   \   00000000   0x4004A004         DC32     0x4004a004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_29:
   \   00000000   0x4004A048         DC32     0x4004a048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_30:
   \   00000000   0x4004A04C         DC32     0x4004a04c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_31:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_32:
   \   00000000   0x40039008         DC32     0x40039008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_33:
   \   00000000   0x400B8008         DC32     0x400b8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_34:
   \   00000000   0x4003904C         DC32     0x4003904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_35:
   \   00000000   0x400B804C         DC32     0x400b804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_36:
   \   00000000   0x40039054         DC32     0x40039054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_37:
   \   00000000   0x400B8054         DC32     0x400b8054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_38:
   \   00000000   0x40039080         DC32     0x40039080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_39:
   \   00000000   0x400B8080         DC32     0x400b8080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_40:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_41:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_42:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_43:
   \   00000000   0x40049030         DC32     0x40049030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_44:
   \   00000000   0x4003900C         DC32     0x4003900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_45:
   \   00000000   0x40039060         DC32     0x40039060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_46:
   \   00000000   0x40039064         DC32     0x40039064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_47:
   \   00000000   0x4003905C         DC32     0x4003905c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_48:
   \   00000000   0x4003906C         DC32     0x4003906c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_49:
   \   00000000   0x40039070         DC32     0x40039070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_50:
   \   00000000   0x40039090         DC32     0x40039090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_51:
   \   00000000   0x40039094         DC32     0x40039094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_52:
   \   00000000   0x40039098         DC32     0x40039098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_53:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_54:
   \   00000000   0x40039004         DC32     0x40039004
    283          
    284          
    285          
    286          
    287          
    288          
    289          
    290          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   MotorInit
       0   QuadInit
       0   ServoInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_26
       4  ??DataTable2_27
       4  ??DataTable2_28
       4  ??DataTable2_29
       4  ??DataTable2_3
       4  ??DataTable2_30
       4  ??DataTable2_31
       4  ??DataTable2_32
       4  ??DataTable2_33
       4  ??DataTable2_34
       4  ??DataTable2_35
       4  ??DataTable2_36
       4  ??DataTable2_37
       4  ??DataTable2_38
       4  ??DataTable2_39
       4  ??DataTable2_4
       4  ??DataTable2_40
       4  ??DataTable2_41
       4  ??DataTable2_42
       4  ??DataTable2_43
       4  ??DataTable2_44
       4  ??DataTable2_45
       4  ??DataTable2_46
       4  ??DataTable2_47
       4  ??DataTable2_48
       4  ??DataTable2_49
       4  ??DataTable2_5
       4  ??DataTable2_50
       4  ??DataTable2_51
       4  ??DataTable2_52
       4  ??DataTable2_53
       4  ??DataTable2_54
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
     328  MotorInit
     206  QuadInit
     182  ServoInit

 
 936 bytes in section .text
 
 936 bytes of CODE memory

Errors: none
Warnings: none
